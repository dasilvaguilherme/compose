version: '3.8'

services:
  # PostgreSQL básico e funcional
  db:
    container_name: supabase-db
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: supabase123
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
        healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    # Usar PostgreSQL padrão sem customizações
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - traefik

  # Analytics simplificado
  analytics:
    container_name: supabase-analytics
    image: supabase/logflare:1.12.0
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
         environment:
       LOGFLARE_NODE_HOST: 0.0.0.0
       DB_USERNAME: postgres
       DB_DATABASE: postgres
       DB_HOSTNAME: db
       DB_PORT: 5432
       DB_PASSWORD: supabase123
       DB_SCHEMA: public
       LOGFLARE_API_KEY: your-secret-logflare-api-key
       LOGFLARE_SINGLE_TENANT: true
       LOGFLARE_SUPABASE_MODE: true
       LOGFLARE_MIN_CLUSTER_SIZE: 1
       POSTGRES_BACKEND_URL: postgresql://postgres:supabase123@db:5432/postgres
       POSTGRES_BACKEND_SCHEMA: public
       LOGFLARE_FEATURE_FLAG_OVERRIDE: multibackend=true
    healthcheck:
      test: ["CMD", "curl", "http://0.0.0.0:4000/health"]
      timeout: 10s
      interval: 10s
      retries: 3
      start_period: 45s
    networks:
      - traefik

  # Meta API
  meta:
    container_name: supabase-meta
    image: supabase/postgres-meta:v0.89.0
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
         environment:
       PG_META_PORT: 8080
       PG_META_DB_HOST: db
       PG_META_DB_PORT: 5432
       PG_META_DB_NAME: postgres
       PG_META_DB_USER: postgres
       PG_META_DB_PASSWORD: supabase123
    networks:
      - traefik


  # API REST  
  rest:
    container_name: supabase-rest
    image: postgrest/postgrest:v12.2.12
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
         environment:
       PGRST_DB_URI: postgres://postgres:supabase123@db:5432/postgres
       PGRST_DB_SCHEMAS: public
       PGRST_DB_ANON_ROLE: postgres
       PGRST_JWT_SECRET: super-secret-jwt-token-with-at-least-32-characters-long
    networks:
      - traefik

  # Dashboard Studio
  studio:
    container_name: supabase-studio
    image: supabase/studio:latest
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      meta:
        condition: service_started
    environment:
      STUDIO_PG_META_URL: http://meta:8080
      DEFAULT_ORGANIZATION_NAME: "Guinfra"
      DEFAULT_PROJECT_NAME: "Supabase Project"
      POSTGRES_PASSWORD: supabase123
      # Configurações básicas
      NEXT_PUBLIC_ENABLE_LOGS: false
      NEXT_PUBLIC_ENABLE_REALTIME: false
    networks:
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.guinfra-supabase.rule=Host(`guinfra-supabase.cloudfy.cloud`)"
      - "traefik.http.routers.guinfra-supabase.entrypoints=websecure"
      - "traefik.http.routers.guinfra-supabase.tls.certresolver=cloudflare"
      - "traefik.http.services.guinfra-supabase.loadbalancer.server.port=3000"

volumes:
  db-data:

networks:
  traefik:
    external: true 
